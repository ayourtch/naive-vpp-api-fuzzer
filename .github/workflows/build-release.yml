on:
  push:
     tags:
     - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build_and_test:
    name: Rust project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: get and build the VPP
        run: |
          git clone https://git.fd.io/vpp/
          cd vpp
          UNATTENDED=y make install-dep build-release
      - name: Build the code
        uses: actions-rs/cargo@v1
	env:
          LD_LIBRARY_PATH: ~/vpp/build-root/install-vpp-native/vpp/lib/
          VPP_LIB_DIR: ~/vpp/build-root/install-vpp-native/vpp/lib/
        with:
          command: build
          args: --release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a "upload_url". See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: target/release/naive-vpp-api-fuzzer
          asset_name: naive-vpp-api-fuzzer
          asset_content_type: application/octet-stream

